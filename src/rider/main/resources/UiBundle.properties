# Action
action.odatacliui.OpenCliDialogAction.text=OData Reference\u2026

# Dialog
cli.tab.generation=Generation Arguments
cli.tab.request=Request Arguments
cli.cli-version.label=OData CLI version:
cli.cli-version.label-value.not-installed=Not installed
cli.cli-version.label-value.global=Global
cli.cli-version.comment=Not installed? Follow <a href='https://github.com/ellizio/odata-cli-ui/blob/master/README.md#installation'>instructions</a>
cli.service-name.row=Service name:
cli.metadata-source.row=Metadata source:
cli.metadata-source.comment=The URI of the metadata document. The value must be set to a valid service document URI or a local file path
cli.filename.empty-text=Default: Reference.cs
cli.filename.comment=The name of the generated file
cli.namespace-prefix.comment=The namespace of the client code generated
cli.excluded-operation-imports.empty-text=Example: ExcludedOperationImport1, ExcludedOperationImport2
cli.excluded-operation-imports.comment=Comma-separated list of the names of operation imports to exclude from the generated code
cli.excluded-bound-operations.empty-text=Example: BoundOperation1, BoundOperation2
cli.excluded-bound-operations.comment=Comma-separated list of the names of bound operations to exclude from the generated code
cli.excluded-schema-types.empty-text=Example: EntityType1, EntityType2, EntityType3
cli.excluded-schema-types.comment=Comma-separated list of the names of entity types to exclude from the generated code
cli.internal.comment=Applies the internal class modifier on generated classes instead of public thereby making them invisible outside the assembly
cli.multiple-files.comment=Split the generated classes into separate files instead of generating all the code in a single file
cli.ignore-unexpected-elements.comment=This flag indicates whether to ignore unexpected elements and attributes in the metadata document and generate the client code if any
cli.upper-camel-case.comment=Transforms names (class and property names) to upper camel-case so that to better conform with C# naming conventions
cli.custom-headers.empty-text=Example: Header1:HeaderValue, Header2:HeaderValue
cli.custom-headers.comment=Headers that will get sent along with the request when fetching the metadata document from the service
cli.proxy.empty-text=Format: SERVER:PORT or domain\\user@SERVER:PORT or domain\\user:password@SERVER:PORT
cli.proxy.comment=Proxy settings
cli.ok-action-button.tooltip.not-installed=OData CLI not installed

# ToolWindow
cli.tab.generate=Generate
